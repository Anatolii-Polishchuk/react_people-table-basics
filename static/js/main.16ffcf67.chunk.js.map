{"version":3,"sources":["components/NavLink/CustomNavLink.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["CustomNavLink","to","label","className","isActive","classNames","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","name","slug","sex","PeopleTable","React","memo","people","personId","map","born","died","fatherName","motherName","mother","find","human","father","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","match","useMatch","selectedPersonId","params","useEffect","catch","finally","length","App","role","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.16ffcf67.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ninterface CustomNavLinkProps {\n  to: string;\n  label: string;\n}\n\nexport const CustomNavLink = ({ to, label }: CustomNavLinkProps) => {\n  return (\n    <NavLink\n      className={({ isActive }) => (\n        classNames('navbar-item', {\n          'has-background-grey-lighter': isActive,\n        })\n      )}\n      to={to}\n    >\n      {label}\n    </NavLink>\n  );\n};\n","import { PersonType } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<PersonType[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { PersonType } from '../../types';\n\ntype Props = {\n  person: PersonType;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, slug, sex } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { PersonType } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: PersonType[];\n  personId: string;\n};\n\nexport const PeopleTable: React.FC<Props> = React.memo(({\n  people,\n  personId,\n}) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            sex,\n            born,\n            died,\n            fatherName,\n            motherName,\n            slug,\n          } = person;\n          const mother = people.find(human => human.name === motherName);\n          const father = people.find(human => human.name === fatherName);\n\n          return (\n            <tr\n              key={slug}\n              data-cy=\"person\"\n              className={classNames({\n                'has-background-warning': slug === personId,\n              })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {mother\n                  ? (\n                    <PersonLink person={mother} />\n                  )\n                  : motherName || '-'}\n              </td>\n              <td>\n                {father\n                  ? (\n                    <PersonLink person={father} />\n                  )\n                  : fatherName || '-'}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n});\n","import { useState, useEffect } from 'react';\nimport { useMatch } from 'react-router-dom';\nimport { PersonType } from '../../types/Person';\nimport { getPeople } from '../../api';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<PersonType[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const match = useMatch('/people/:personId');\n  const selectedPersonId = match?.params.personId || '';\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople().then(setPeople)\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"block\">\n      {isLoading\n        ? <Loader />\n        : (\n          <div className=\"box table-container\">\n            {isError && (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n            )}\n\n            {people.length === 0 && (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            )}\n            <PeopleTable\n              people={people}\n              personId={selectedPersonId}\n            />\n          </div>\n        )}\n    </div>\n  );\n};\n","import {\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport './App.scss';\nimport { CustomNavLink } from './components/NavLink/CustomNavLink';\nimport { PeoplePage } from './components/PeoplePage/Index';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <CustomNavLink to=\"/\" label=\"Home\" />\n\n            <CustomNavLink to=\"/people\" label=\"People\" />\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <h1 className=\"title\">Home Page</h1>\n              }\n            />\n\n            <Route\n              path=\"/home\"\n              element={\n                <Navigate to=\"/\" replace />\n              }\n            />\n\n            <Route\n              path=\"/people\"\n              element={(\n                <>\n                  <h1 className=\"title\">People Page</h1>\n                  <PeoplePage />\n                </>\n              )}\n            />\n\n            <Route\n              path=\"/people/:personId\"\n              element={(\n                <>\n                  <h1 className=\"title\">People Page</h1>\n                  <PeoplePage />\n                </>\n              )}\n            />\n\n            <Route\n              path=\"*\"\n              element={\n                <h1 className=\"title\">Page not found</h1>\n              }\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as BrouserRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <BrouserRouter>\n      <App />\n    </BrouserRouter>,\n  );\n"],"sourceRoot":""}